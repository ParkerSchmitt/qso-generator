#lang racket
(require rackunit "callsign-generate.rkt")

; digit?
(check-false (digit? #\A))
(check-false (digit? #\B))
(check-false (digit? #\C))
(check-false (digit? #\D))
(check-false (digit? #\E))
(check-false (digit? #\F))
(check-false (digit? #\G))
(check-false (digit? #\H))
(check-false (digit? #\I))
(check-false (digit? #\J))
(check-false (digit? #\K))
(check-false (digit? #\L))
(check-false (digit? #\M))
(check-false (digit? #\N))
(check-false (digit? #\O))
(check-false (digit? #\P))
(check-false (digit? #\Q))
(check-false (digit? #\R))
(check-false (digit? #\S))
(check-false (digit? #\T))
(check-false (digit? #\U))
(check-false (digit? #\V))
(check-false (digit? #\W))
(check-false (digit? #\X))
(check-false (digit? #\Y))
(check-false (digit? #\Z))
(check-false (digit? #\a))
(check-false (digit? #\b))
(check-false (digit? #\c))
(check-false (digit? #\d))
(check-false (digit? #\e))
(check-false (digit? #\f))
(check-false (digit? #\g))
(check-false (digit? #\h))
(check-false (digit? #\i))
(check-false (digit? #\j))
(check-false (digit? #\k))
(check-false (digit? #\l))
(check-false (digit? #\m))
(check-false (digit? #\n))
(check-false (digit? #\o))
(check-false (digit? #\p))
(check-false (digit? #\q))
(check-false (digit? #\r))
(check-false (digit? #\s))
(check-false (digit? #\t))
(check-false (digit? #\u))
(check-false (digit? #\v))
(check-false (digit? #\w))
(check-false (digit? #\x))
(check-false (digit? #\y))
(check-false (digit? #\z))
(check-true (digit? #\0))
(check-true (digit? #\1))
(check-true (digit? #\2))
(check-true (digit? #\3))
(check-true (digit? #\4))
(check-true (digit? #\5))
(check-true (digit? #\6))
(check-true (digit? #\7))
(check-true (digit? #\8))
(check-true (digit? #\9))
(check-false (digit? #\!))
(check-false (digit? #\#))
(check-false (digit? #\@))
(check-false (digit? #\_))
(check-false (digit? 'BT#))
(check-false (digit? 'SK@))
(check-false (digit? 'AR!))
(check-false (digit? '(#\A #\B #\C)))
(check-false (digit? '(#\1 #\2 #\3)))
(check-false (digit? '(1 2 3)))
(check-false (digit? '(A B C)))
(check-false (digit? '(A (B C))))
(check-false (digit? '()))

; digits-from
(check-equal? (digits-from '(#\A #\B #\C #\1 #\2 #\3)) '(#\1 #\2 #\3))
(check-equal? (digits-from '(#\A #\1 #\B #\2 #\C #\3)) '(#\1 #\2 #\3))
(check-equal? (digits-from '(A #\A #\9 Q #\B #\8 #\C M #\4)) '(#\9 #\8 #\4))
(check-equal? (digits-from '()) '())
(check-equal? (digits-from '(#\A #\B #\C)) '())
